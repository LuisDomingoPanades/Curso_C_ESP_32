#include <WiFi.h>
#include "time.h"


const char* ssid       = "RSense";
const char* password   = "";
uint16_t serverPort= 8000;
const char* serverIP="192.168.0.140";
WiFiClient client;

const char* ntpServer = "pool.ntp.org";
const long  gmtOffset_sec = 3600;
const int   daylightOffset_sec = 3600;

void printLocalTime()
{
  struct tm timeinfo;
  if(!getLocalTime(&timeinfo)){
    Serial.println("Failed to obtain time");
    return;
  }
  Serial.println(&timeinfo, "%A, %B %d %Y %H:%M:%S");
}

void setup()
{
  Serial.begin(115200);
  
  //connect to WiFi
  Serial.printf("Connecting to %s ", ssid);
  WiFi.begin(ssid);
  while (WiFi.status() != WL_CONNECTED) {
      delay(500);
      Serial.print(".");
  }
  Serial.println(" CONNECTED");
  
  //init and get the time
  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);
  printLocalTime();

  //disconnect WiFi as it's no longer needed
  //WiFi.disconnect(true);
  //WiFi.mode(WIFI_OFF);
}

void loop()
{
  Serial.println("Intenta acceder al servidor");
    if (client.connect(serverIP, serverPort)) // Intenta acceder a la dirección de destino
    {
        Serial.println("Visita exitosa");

        client.print("Hello world!");                    // Enviar datos al servidor
        while (client.connected() || client.available()) // Si está conectado o se han recibido datos no leídos
        {
            if (client.available()) // Si hay datos para leer
            {
                String line = client.readStringUntil('\n');
                if (line=="start")
                {
                  while(1)
                  {
                    printLocalTime();
                    delay(1000);
                    String line = client.readStringUntil('\n');
                    if (line=="stop");
                    {  
                      break;
                    }  
                  }
                 }
  
            }
        }
        client.stop();
    }
    else
    {
      client.stop();
      }
    delay(5000);
}
